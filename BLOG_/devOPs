TABLE OF CONTENTS -

Author
Why DevOPs
What is DevOPs
Principle of Devps
DevOps LifeCycle
DevOps Tools
DevOps Benefit
DevSecOps
Conclusion

Author -
Sundram Awasthi.

Introduction-

Why DevOps -

        In a  early period  for the software development process we have a methodology that called a WATER FALL METHODOLOGY

                WATERFALL METHODOLOGY -

                    Waterfall methodology is of the basic methodology that is use in software developement process and also in Different places.
                    Its works as a liner order

                waterfall methodology  Phase-

                    ITS HAS A MULTIPLE PHASES AS -

                      REQUIRMENT->DESIGNEMENT->IMPLEMENT ->TESTING->DEPLOYMENT ->MAINTANCE

                    SO WE HAVE 6 PHASES OVER HERE -

                       REQUIRMENT PHASE - In Requirment Phase basically people set together and see ehat are the requirment
                       for the product functional and non-functional service that they are developed.

                       DESIGNING PHASE -{In designing phase they start planning of these thing base
                       on requirment that they are discuss earliar , they assigne task to specific team
                       they schedule task to happen at a Certain time they also make sure they have enough
                       resource to perform. }

                       IMPLEMENT PHASE - In implement phase  we going to start a implement the software by use of codeing.

                       TESTING - In testing phase we gohead and test our software for a specific thing,test base of requirment,they do integrating testing.

                       DEPLOYMENT -Software is given to the final end user, where user start to use the software.

                       MAINTANCE PHASE {In maintainance phase we maintaince the software ,if there is any crush or bug in it.

                Problem with Waterfall model  -

                        The problem occur with waterfall model is that,it is very long prcess as its works as linner order so, it take months to complete the software development process.                         IN EARLY DAY WHEN WATERFALL MODEL COMES IT USED IN SOFTWARE DEVELOPMENT ALSO IN VARIOUS FILED,

                Problem solve by devOps approch-

                        BUT IN TODAYS AGE WE HAVE MANY DIFFERNT KIND OF USE CASES AND DIFFERENT CENERIO WHERE YOU CON
                         NOT USE THESE MODEL.

                        So for solveing this problem  We use DevOps approch that is very efficient and not take lot of time in software devlopment
                        Process.

What is DevOPs -

        We can say that DevOps is basically the way of software development ,and It is set of value and Principle,
        it has a  methodologies also it is  a set of Tools.

        The name devops comes from cobination of  deloper and operation, devOPs bridge the Commnucation gap between the software development
        and it operation team .

        Devloper -> DevOps <- operation

        DevOPs allow single team to manage whole application development lifecycle.

        DevOps is an angile relationship between development and it operation.

        pattern that consist between dev and OPs -

            PLAN->CREATE->VARIFY->PACKAGE->RELEASE->CONFIGURE->MONITOR


             DEVLOPMENT-> PLAN.CREATE,VERIFY,PACKAGE.
             OPERATION -> RELEASE , CONFIGURE, MONITOR.



                Aim of DevOps -

                  software development life LifeCycle
                  Provide feature and fixes
                  Provied ragular update

Principle Of DevOps -

DEvOps is follow the principle of DASA , DASA is stand for DevOPs agile skill association.

DASA DEVOPS PRINCIPLE -

DASA Stand for devops agile skill association -
It give a certain principle for devOPs that is .

1.  - Customer centric action

      Short loop feedback with real customer and end user essential nowTC days so for satisfiying the
      them companies must constantly innovate and invest in good abd services that would delight
      costomers to the greatest extends possible .

2.  - create with end in the mind.
      organization must abund in waterfall and process oriented model in which each unit is responsible
      for specific role and responsiblities and not for the overall images .They must focused on product
      identifying customer true need and working toword Creating product and services that address those
      demand.

3.  - End-to-End responsibility-
      In devOPs envirement team are vertically organised so they are fully accountable unlike
      inventional organization which designe it soluction to deploy and manage.
      These team are responsible for quality and quantity of service provide to its client .

4.  - Cross functional autonomus team

      In product company team completely self contain entire life cycle , These nessasity state
      that diverse range of skill .

5.  - Contineous improvement

      Contineous improvement enhanced the product and services offered to customer.
      Contineous improvement in DevOPs reducte waste optimize time and easy delivery .

6.  - Automate everything you can .

      Automation is associated with the goal of redefining how team delivery its dervices

DEVOPS LIFECYCLE -

      DevOPs lifeCycle is based on five phase -

      CONTINEOUS DEPLOPMENT{
      This phase manifest the planning and codeing of software .
      the objective of the project is detrmine during the planning phase and
      developer start building the code .

      CONTINEOUS testing {
      In this phase developed application is rigorously tested for bugs .
      Automation testing tools like Junit , selenium ,and some other.

                TESTNG - TestNG generate report
                Selenium - selenium implement the automation testing .

                Docker Container simulate the test envirment in contineous testing .

                By use of Jenkins entire testing procedure is  automated.

                Its save lot of time .

      CONTINEOUS INTEGRATION {REQUIRE COMMIT CODE EASILY}
      Contineous Integration is essential Phase of devOPs which deal with software
      development .Frequently changes are made to source code.

                 Its a practice where  developemnt required to commit there  souurce code more
                 effectively.

                 Building code is not only involve accomplation but it also include
                 unit testing , integrating testing , code review , and code packing .

                 The new functionality code consistently bended with existing code
                 hence contineous development of software reflect the change to the end user \
                 updated code must bee integrated contineously with the system .

      CONTINEOUS DEPLOYMENT -

                Contineous Deployment phase mean that it implement code correctly deploy to all
                production server

                The new code is contineously deploy and configration tools are required to
                manage it effectively .

           Popular Tools use in this  deployment -

                 CHEF, PUPPET, ANSIBLE.

      CONTINEOUS MONITORING -

                  Contineous monitoring includes all operational aspects , where critical information
                  about the software use in recording and analyed by drive analytics .

                  It maintain the security and avability of the services .

           popular Tools use in monitoring -

                   Nagios , Grafana , sensu , dataDog, Cloudwatch .

WIDELY USE DEVOPS TOOLS -

        The devOps life Cycle has five phase each phase has it own setup tools that devOPs aspirant
        and pratices must know .


        Tools are Categarized In seven part .

SOURCE CODE MANAGEMENT -
Source Code management use to track the modification to the source code repositiory.
They track the running history of the changes to the code base and help
resolve conflict when mergeing and update from multiple contribuation .

Popular tools are - GIT and GITHUB

SOFTWARE BUILT -

Popular Software built tools are - Gradle and Maven .
Other software built option tools are - HashiCorp , Apache ant , and Gulp

TESTING -
All product are testing before deploy .

Popular teesting tools are - SELINIUM , JUNIT ,APPINUM

INTEGRATION -

popular integration tools are - JENKINS , BAMBOO

CMT & DEPLOYMENT -

CMT and Deployment is one of the curial stage in devOps

Popular Tools that are use -

TERAFORM , ANSSIBLE , PUPPET, CHEF, AWSCODE DEPLOYMENT,CODESHIP

MONITORING -
Monitoring application help in ensuring the product work correctly.

popular tools use in monitoring are - NAGIOS, SPLUNK

CONTANARIATION -
Contanerzation is define as form of os virtulization in which application run .
in issolated user spaace that called container.

popular tools use in container are - DOCKER, KUBERNETES

         BENIFIT IN DEVOPS -

ASSURED RAPID DEPLOYMENT

BALANCED WORKING ENVIRMENT

DRASTIC IMPROVEMENT

REPETATIVE TASK IS AUTOMATED

PROACTIVE GROWTH OF THE BUSINESS

CONTINEOUS Delivery

MINIMAL COST OF PRODUCTION

HIGHER PRODUCTIVITY

        DEVSECOPS -

        DevOps encourage collaboration throughout the app development and deployment process.

        Software development with devops will pose a significant delay in delivery due to
        security problem

         DevSecOps emerged from DevOps to integrate the managemnt of security throughout the
         devlopment process .

        In simple term DevSecOps  -

DEVELOPMENT SECURITY OPERATION

Idea behind is integrating of security pratices in devops methology

devsecops offer faster security in code with contineous collaboration

BENIFIT OF DEV SEC OPS -

RAPID COST EFFECTIVE SOFTWARE DELIVERY

ACCELARAED SECURITY VALUNERBILITY

REPETABLE AND ADOPTIVE PROCESS

AUTOMATION COMPATIBLE WITH MODERN DEPLOYMENT

    Conclusion  -

    yeah now Concluding it,  As we above discuss DevOPs is a methodology by which we bridge the gap
    between develperment and operation team . we also discuss about the various tools that are use in this
    methodology also we can saw a devSecOps that provide devOps more security.
